---
- hosts: "{{ tg_hosts }}"
  become: yes
  gather_facts: yes
  tasks:
    - name: Node IP
      debug: var=ansible_facts.default_ipv4.address
    - name: Get hosts
      debug: var=ansible_play_hosts
- hosts: "{{ tg_hosts }}[0]"
  become: yes
  gather_facts: yes
  tasks:
    - name: Get hosts
      debug: var=ansible_play_hosts
    - name: Init docker swarm
      docker_swarm:
        state: present
      register: docker_swarm_out
    - name: Dump docker_swarm_out
      debug: var=docker_swarm_out
    - name: Set join_token fact
      set_fact:
        join_token: "{{ docker_swarm_out.swarm_facts.JoinTokens.Worker }}"
    - name: Dump join_token
      debug: var=join_token
    # docker network create --driver overlay --subnet 10.99.0.0/16 tgoverlay
    - name: Create testground overlay network
      docker_network:
        name: tgoverlay
        driver: overlay
        ipam_config:
          - subnet: 10.99.0.0/16
- hosts: "{{ tg_hosts }}[1:]"
  become: yes
  gather_facts: yes
  tasks:
    - name: Get hosts
      debug: var=ansible_play_hosts
    - name: Identify manager node
      set_fact:
        manager: "{{ groups[tg_hosts][0] }}"
    - name: Dump manager
      debug: var=manager
    - name: Fetch join_token
      set_fact:
        join_token: "{{ hostvars[manager].join_token }}"
    - name: Dump join_token
      debug: var=join_token
    - name: Join Docker Swarm as worker
      docker_swarm:
        state: join
        advertise_addr: "{{ ansible_facts.default_ipv4.address }}"
        join_token: "{{ join_token }}"
        remote_addrs: [ "{{ manager }}:2377" ]


